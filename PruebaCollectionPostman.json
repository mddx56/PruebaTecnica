{
	"info": {
		"_postman_id": "a6f23c06-8f07-423c-89f0-2db21d3212d4",
		"name": "API documentation",
		"description": "# ðŸ“„ Prueba .NET 8 - GestiÃ³n de Tareas de\n\nEste es un proyecto **API RESTful** desarrollado en **.NET 8** utilizando **Entity Framework Core** y **SQL Server** para la gestiÃ³n de tareas de mantenimiento en tiendas.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "209286"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "SignUp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"tecnico22@cc.com\",\r\n  \"password\": \"12345678Mj.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/users/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"signup"
							]
						},
						"description": "Gets information about the authenticated user."
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"user@example.com\",\r\n  \"password\": \"12345678Mj.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/users/signin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Usuarios",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"user@example.com\",\r\n  \"password\": \"12345678Mj.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hacer Admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"user@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/users/make-admin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"make-admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Quitar Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"user@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/users/make-admin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"make-admin"
							]
						}
					},
					"response": []
				}
			],
			"description": "The `/me` endpoints let you manage information about the authenticated user."
		},
		{
			"name": "Tareas",
			"item": [
				{
					"name": "Crear",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"Limpiar garaje\",\n    \"Description\": \"SN\",\n    \"Completed\": false,\n    \"StoreId\": 3,\n    \"UserId\": \"27c2f44d-8dcb-441c-9be0-00c1dea77a75\",\n    \"CreatedAt\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/tasks",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "workspace",
									"value": "{{workspaceId}}",
									"description": "Optional. A workspace ID in which to create the collection.\n\nIf you do not include this query parameter, the system creates the collection in your \"My Workspace\" workspace.",
									"disabled": true
								}
							]
						},
						"description": "Creates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n*   `info` â€” An **object** that contains the following properties:\n    *   `name` â€” A **string** value that contains the collection's name.\n    *   `schema` â€” A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n*   `item` â€” An **object** that contains the HTTP request and response information.\n    *   `request` â€” An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n*   For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    *   `info` object â€” Use the `definitions.info` entry.\n    *   `item` object â€” Use the `definitions.items` entry.\n*   For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": []
				},
				{
					"name": "Listar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks?Page=2&RecordsPerPage=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "Page",
									"value": "2"
								},
								{
									"key": "RecordsPerPage",
									"value": "5"
								}
							]
						},
						"description": "Gets information about a collection. For a complete list of this endpoint's possible values, use the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json)."
					},
					"response": []
				},
				{
					"name": "Eliminar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"1"
							]
						},
						"description": "Deletes a collection."
					},
					"response": []
				},
				{
					"name": "Actualizar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"Limpiar malesa del parqueo\",\n    \"Description\": \"SN\",\n    \"Completed\": false,\n    \"StoreId\": 2,\n    \"UserId\": \"27c2f44d-8dcb-441c-9be0-00c1dea77a75\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/tasks/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"1"
							]
						},
						"description": "Updates a collection using the [Postman Collection v2 schema format](https://schema.postman.com/json/collection/v2.1.0/docs/index.html). Include a `collection` object in the request body that contains the following required properties:\n\n- `info` â€” An **object** that contains the following properties:\n    - `name` â€” A **string** value that contains the collection's name.\n    - `schema` â€” A **string** that contains a URL to the collection's schema. For example, the `https://schema.getpostman.com/collection/v1` URL.\n- `item` â€” An **object** that contains the HTTP request and response information.\n    - `request` â€” An **object** that contains the collection's request information. For a complete list of values, refer to the `definitions.request` entry in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json). If you pass an empty object for this value, the system defaults to an untitled GET request.\n\n**Note:**\n\n- For a complete list of available property values for this endpoint, use the following references available in the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json):\n    - `info` object â€” Use the `definitions.info` entry.\n    - `item` object â€” Use the `definitions.items` entry.\n- For all other possible values, refer to the [collection.json schema file](https://schema.postman.com/json/collection/v2.1.0/collection.json).\n    \n\n### Important\n\nUse caution when using this endpoint. The system will replace the existing collection with the values passed in the request body."
					},
					"response": []
				},
				{
					"name": "Tareas Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/tasks/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"tasks",
								"me"
							]
						},
						"description": "Gets all of your [collections](https://www.getpostman.com/docs/collections). The response includes all of your subscribed collections."
					},
					"response": []
				}
			],
			"description": "Endpoints de Tareas."
		},
		{
			"name": "Tiendas",
			"item": [
				{
					"name": "Listar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJsbyBxdWUgeW8gcXVpZXJhIjoiY3VhbHF1aWVyIHZhbG9yIiwiZXhwIjoxNzczNDU2Nzk1fQ.toDGj0FjA5mceTGpaBgiJ94aDyx0zj_JEbsE_qKIk0k",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stores",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJsbyBxdWUgeW8gcXVpZXJhIjoiY3VhbHF1aWVyIHZhbG9yIiwiZXhwIjoxNzczNDU2Nzk1fQ.toDGj0FjA5mceTGpaBgiJ94aDyx0zj_JEbsE_qKIk0k",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stores/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stores",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJsbyBxdWUgeW8gcXVpZXJhIjoiY3VhbHF1aWVyIHZhbG9yIiwiZXhwIjoxNzczNDU2Nzk1fQ.toDGj0FjA5mceTGpaBgiJ94aDyx0zj_JEbsE_qKIk0k",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Los chacos\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/stores",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJsbyBxdWUgeW8gcXVpZXJhIjoiY3VhbHF1aWVyIHZhbG9yIiwiZXhwIjoxNzczNDU2Nzk1fQ.toDGj0FjA5mceTGpaBgiJ94aDyx0zj_JEbsE_qKIk0k",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"Estacion Argentina\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/stores/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stores",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/stores/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"stores",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://localhost:7019"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJsbyBxdWUgeW8gcXVpZXJhIjoiY3VhbHF1aWVyIHZhbG9yIiwiZXhwIjoxNzczNDU3MTEzfQ.eZENpmzXoYRsqa0gho9WqpRFQYLHEbWzDBDubrEUQXc",
			"type": "string"
		}
	]
}